/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package project;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author student
 */
public class admin_options extends javax.swing.JFrame {

    /**
     * Creates new form admin_options
     */
    public admin_options() {
        initComponents();
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        emppane = new javax.swing.JScrollPane();
        emp = new javax.swing.JTable();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox<>();
        trackpane = new javax.swing.JScrollPane();
        track = new javax.swing.JTable();
        salespane = new javax.swing.JScrollPane();
        sales = new javax.swing.JTable();
        registeredpane = new javax.swing.JScrollPane();
        registered = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("ADMINISTRATOR OPTIONS");
        setMaximumSize(new java.awt.Dimension(782, 550));
        setMinimumSize(new java.awt.Dimension(782, 550));
        setPreferredSize(new java.awt.Dimension(782, 550));
        setResizable(false);
        setSize(new java.awt.Dimension(782, 550));
        getContentPane().setLayout(null);

        emp.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Employee ID", "Name", "Salary", "Designation"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        emppane.setViewportView(emp);
        if (emp.getColumnModel().getColumnCount() > 0) {
            emp.getColumnModel().getColumn(0).setResizable(false);
            emp.getColumnModel().getColumn(1).setResizable(false);
            emp.getColumnModel().getColumn(2).setResizable(false);
            emp.getColumnModel().getColumn(3).setResizable(false);
        }

        getContentPane().add(emppane);
        emppane.setBounds(20, 130, 733, 170);
        getContentPane().add(jSeparator1);
        jSeparator1.setBounds(24, 318, 733, 13);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("View Data:");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(24, 11, 74, 17);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "NONE", "REGISTERED", "SALES", "EMPLOYEEDB", "TRACK" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        getContentPane().add(jComboBox1);
        jComboBox1.setBounds(190, 70, 416, 36);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Maintenance:");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(24, 337, 92, 17);

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "NONE", "EMPLOYEEDB", "REGISTERED", "TRACK" }));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });
        getContentPane().add(jComboBox2);
        jComboBox2.setBounds(190, 400, 398, 38);

        track.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Customer ID", "Booking ID", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        trackpane.setViewportView(track);
        if (track.getColumnModel().getColumnCount() > 0) {
            track.getColumnModel().getColumn(0).setResizable(false);
            track.getColumnModel().getColumn(1).setResizable(false);
            track.getColumnModel().getColumn(2).setResizable(false);
        }

        getContentPane().add(trackpane);
        trackpane.setBounds(20, 130, 730, 170);

        sales.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Car Name", "Units Sold"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        salespane.setViewportView(sales);
        if (sales.getColumnModel().getColumnCount() > 0) {
            sales.getColumnModel().getColumn(0).setResizable(false);
            sales.getColumnModel().getColumn(1).setResizable(false);
        }

        getContentPane().add(salespane);
        salespane.setBounds(20, 130, 730, 170);

        registered.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Customer ID", "Name", "Email", "Phone"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        registeredpane.setViewportView(registered);
        if (registered.getColumnModel().getColumnCount() > 0) {
            registered.getColumnModel().getColumn(0).setResizable(false);
            registered.getColumnModel().getColumn(1).setResizable(false);
            registered.getColumnModel().getColumn(2).setResizable(false);
            registered.getColumnModel().getColumn(3).setResizable(false);
        }

        getContentPane().add(registeredpane);
        registeredpane.setBounds(20, 130, 730, 170);

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton1.setText("LOGOUT");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(660, 23, 100, 30);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
       String s = jComboBox1.getSelectedItem().toString();
       switch(s)
       {
            case "EMPLOYEEDB" :
                DefaultTableModel model = new DefaultTableModel(new String[]{"Employee ID","Name","Salary","Designation"},0);
                try{
                    Class.forName("oracle.jdbc.driver.OracleDriver");
                    Connection conn= DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE","system","ddas123");
                    PreparedStatement ps = conn.prepareStatement("select * from employeedb");
                    ResultSet rs = null;
                    rs = ps.executeQuery();
                        while(rs.next())
                        {
                            String eid = rs.getString("empid");
                            String nam = rs.getString("ename");
                            String sal = rs.getString("salary");
                            String des = rs.getString("post");
                            model.addRow(new Object[]{eid,nam,sal,des});
                     
                        }
                    emp.setModel(model);
                    emp.setVisible(true);
                    emppane.setVisible(true);
                    registered.setVisible(false);
                    registeredpane.setVisible(false);
                    sales.setVisible(false);
                    salespane.setVisible(false);
                    track.setVisible(false);
                    trackpane.setVisible(false);
                }
                catch(Exception e){}
            break;
            
            case "REGISTERED" :
                DefaultTableModel model1 = new DefaultTableModel(new String[]{"Customer ID","Name","Email","Phone"},0);
                try{
                    Class.forName("oracle.jdbc.driver.OracleDriver");
                    Connection conn= DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE","system","ddas123");
                    PreparedStatement ps = conn.prepareStatement("select * from registered");
                    ResultSet rs = null;
                    rs = ps.executeQuery();
                        while(rs.next())
                        {
                            String cid = rs.getString("cust_id");
                            String cnam = rs.getString("name");
                            String cem = rs.getString("email");
                            String cph = rs.getString("phone");
                            model1.addRow(new Object[]{cid,cnam,cem,cph});
                     
                        }
                    registered.setModel(model1);
                    emp.setVisible(false);
                    emppane.setVisible(false);
                    registered.setVisible(true);
                    registeredpane.setVisible(true);
                    sales.setVisible(false);
                    salespane.setVisible(false);
                    track.setVisible(false);
                    trackpane.setVisible(false);
                }
                catch(Exception e){}
            break;
            
            case "SALES" :
                DefaultTableModel model2 = new DefaultTableModel(new String[]{"Car Name","Units Sold"},0);
                try{
                    Class.forName("oracle.jdbc.driver.OracleDriver");
                    Connection conn= DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE","system","ddas123");
                    PreparedStatement ps = conn.prepareStatement("select * from sales");
                    ResultSet rs = null;
                    rs = ps.executeQuery();
                        while(rs.next())
                        {
                            String snam = rs.getString("car_name");
                            String sunit = rs.getString("units_sold");
                            
                            model2.addRow(new Object[]{snam,sunit});
                     
                        }
                    sales.setModel(model2);
                    emp.setVisible(false);
                    emppane.setVisible(false);
                    registered.setVisible(false);
                    registeredpane.setVisible(false);
                    sales.setVisible(true);
                    salespane.setVisible(true);
                    track.setVisible(false);
                    trackpane.setVisible(false);
                }
                catch(Exception e){}
            break;
            
            case "TRACK" :
                DefaultTableModel model3 = new DefaultTableModel(new String[]{"Customer ID","Booking ID","Status"},0);
                try{
                    Class.forName("oracle.jdbc.driver.OracleDriver");
                    Connection conn= DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE","system","ddas123");
                    PreparedStatement ps = conn.prepareStatement("select * from track");
                    ResultSet rs = null;
                    rs = ps.executeQuery();
                        while(rs.next())
                        {
                            String cid = rs.getString("cust_id");
                            String bid = rs.getString("book_id");
                            String stat = rs.getString("status");
                            
                            model3.addRow(new Object[]{cid,bid,stat});
                     
                        }
                    track.setModel(model3);
                    emp.setVisible(false);
                    emppane.setVisible(false);
                    registered.setVisible(false);
                    registeredpane.setVisible(false);
                    sales.setVisible(false);
                    salespane.setVisible(false);
                    track.setVisible(true);
                    trackpane.setVisible(true);
                }
                catch(Exception e){}
            break;
            
            default:
                System.out.println("");    
       }
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        login n = new login();
        n.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
         String t1 = jComboBox2.getSelectedItem().toString();
         if(t1.equals("EMPLOYEEDB"))
         {
             data_view d1 = new data_view("EMPLOYEEDB");
             d1.setVisible(true);
             this.setVisible(false);
         }
         else if(t1.equals("REGISTERED"))
         {
             data_view d2 = new data_view("REGISTERED");
             d2.setVisible(true);
              this.setVisible(false);
         }
         else if(t1.equals("TRACK"))
         {
             data_view d3 = new data_view("TRACK");
             d3.setVisible(true);
              this.setVisible(false);
         }
    }//GEN-LAST:event_jComboBox2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(admin_options.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(admin_options.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(admin_options.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(admin_options.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new admin_options().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable emp;
    private javax.swing.JScrollPane emppane;
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable registered;
    private javax.swing.JScrollPane registeredpane;
    private javax.swing.JTable sales;
    private javax.swing.JScrollPane salespane;
    private javax.swing.JTable track;
    private javax.swing.JScrollPane trackpane;
    // End of variables declaration//GEN-END:variables

}
